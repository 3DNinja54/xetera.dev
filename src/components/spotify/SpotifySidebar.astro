---
import groupBy from "lodash/groupBy"
import { formatDistance } from "date-fns"
import { getSpotifyTracks } from "🛠️/spotify"
import SpotifySong from "./SpotifySong.astro"
import SpotifyDateDivider from "./SpotifyDateDivider.astro"
import HomepageSection from "🧱/HomepageSection.astro"
import SectionHeader from "🧱/SectionHeader.astro"
import type { Track } from "spotify-types"

const { likedTracks } = await getSpotifyTracks()

const augmented = groupBy(
  likedTracks.items.map(track => ({
    ...track,
    distance: formatDistance(new Date(track.added_at as string), new Date(), {
      addSuffix: true,
    }),
  })),
  val => val.distance
)
---

<HomepageSection class="flex">
  <SectionHeader>Liked Spotify Tracks 🎧</SectionHeader>

  <aside class="grid gap-6">
    {
      Object.entries(augmented).map(([distance, songs]) => {
        return (
          <div>
            <SpotifyDateDivider class="mb-3">{distance}</SpotifyDateDivider>
            <div class="flex flex-col gap-6">
              {songs.map(song => (
                <a
                  href={(song.track as Track).external_urls.spotify}
                  target="_blank"
                >
                  <SpotifySong {...song} />
                </a>
              ))}
            </div>
          </div>
        )
      })
    }
  </aside>
</HomepageSection>
