---
import ArticleLink from "🧱/ArticleLink.astro";
import Bio from "🧱/Bio.astro";
import Navbar from "🧱/Navbar.astro";
import Layout from "../layouts/Layout.astro";
import Rss from "🧱/icons/Rss.astro";
import { sub } from "date-fns";
import SectionHeader from "🧱/SectionHeader.astro";
import HomepageSection from "🧱/HomepageSection.astro";
import BookGrid from "🧱/kindle/BookGrid.astro";
import Ultrawide from "🧱/misc/Ultrawide.astro";
import SpotifySidebar from "🧱/spotify/SpotifySidebar.astro";
import { LanyardStatus } from "🧱/lanyard/LanyardStatus";
import { getAllContent } from "🛠️/content";

const visiblePosts = await getAllContent();
---

<Layout title="Xetera">
  <Navbar />
  <main class="flex justify-center w-full my-7xl lg:my-[10%] homepage mx-6">
    <div
      class="flex flex-col gap-8 md:gap-12 mx-auto max-w-7xl w-full px-4 md:px-6"
    >
      <div class="mb-8">
        <Bio />
      </div>
      <div class="grid homepage-grid gap-8">
        <HomepageSection
          class="col-span-full md:col-span-2 flex grid-area-[articles]"
        >
          <SectionHeader>
            {visiblePosts.length} Articles 📝
            <a
              slot="aside"
              href="/rss.xml"
              class="underlined inline-flex items-center gap-2 color-text-500"
            >
              <p>Subscribe to the RSS feed</p>
              <Rss />
            </a>
          </SectionHeader>
          <div class="posts flex flex-col gap-3">
            {
              visiblePosts.map((post) => {
                const isNew = sub(new Date(), { days: 30 }) < post.data.date;

                return (
                  <div class="post">
                    <ArticleLink {...post} isNew={isNew} />
                  </div>
                );
              })
            }
          </div>
        </HomepageSection>
        <BookGrid class="grid-area-[books]" />
        {
          import.meta.env.DISCORD_ID && (
            <LanyardStatus
              className="grid-area-[lanyard]"
              discordId={import.meta.env.DISCORD_ID}
              client:idle
            />
          )
        }
        <SpotifySidebar class="grid-area-[spotify]" />
      </div>
      <aside class="col-span-full md:col-span-1 flex flex-col gap-8"></aside>
    </div>
  </main>
</Layout>

<Ultrawide />

<style>
  .homepage-grid {
    grid-template-columns: 1fr;
    /* this is total hackery, I can probably remove this in like 2025
       when grid-template-rows: masonry is widely supported */
    grid-template-rows: 120px;
    grid-template-areas:
      "lanyard"
      "articles"
      "books"
      "spotify";
  }
  @supports (grid-template-rows: masonry) {
    .homepage-grid {
      grid-template-rows: masonry;
    }
  }
  @media screen and (min-width: 768px) {
    .homepage-grid {
      grid-template-columns: repeat(3, 1fr);
      grid-template-areas:
        "articles articles lanyard"
        "articles articles spotify"
        "books books spotify";
    }
  }
</style>
